[{"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\index.js":"1","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\reportWebVitals.js":"2","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\App.js":"3","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\LobbyScreen.js":"4","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\JoinScreen.js":"5","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\GameScreen.js":"6","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\ResultsScreen.js":"7","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\styles\\PlayerColors.js":"8","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\PlayerIcon.js":"9","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\IndividualResults.js":"10","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\GroupResults.js":"11"},{"size":507,"mtime":1609034675236,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3817,"mtime":1610922364120,"results":"15","hashOfConfig":"13"},{"size":5512,"mtime":1610919035663,"results":"16","hashOfConfig":"13"},{"size":5007,"mtime":1611087368106,"results":"17","hashOfConfig":"13"},{"size":6001,"mtime":1611002100542,"results":"18","hashOfConfig":"13"},{"size":996,"mtime":1610917890622,"results":"19","hashOfConfig":"13"},{"size":267,"mtime":1610653806357,"results":"20","hashOfConfig":"13"},{"size":1748,"mtime":1610229011417,"results":"21","hashOfConfig":"13"},{"size":2550,"mtime":1610921287919,"results":"22","hashOfConfig":"13"},{"size":3641,"mtime":1611002635455,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13vr4rc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\index.js",[],["51","52"],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\reportWebVitals.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\App.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\LobbyScreen.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\JoinScreen.js",["53"],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\GameScreen.js",["54"],"// Screen where players see the prompt and put in their individual votes.\r\n\r\n// Our Stylings\r\nimport '../styles/styles.css';\r\nimport { PLAYER_COLORS } from \"../styles/PlayerColors.js\";\r\n// React Stuff\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from \"../../node_modules/react-beautiful-dnd\"\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction GameScreen (props) {\r\n\r\n  const [lockAnswersModalOpenStatus, setLockAnswersModalOpenStatus] = useState(false);\r\n  const [answersLocked, setAnswerLockStatus] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  // Called when time is up.\r\n  const timeIsUp = (timer) => {\r\n    lockAnswers();\r\n    window.setTimeout(() => setRedirect(true), 2000);\r\n  }\r\n  \r\n  // Drag & Drop Functions\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination || answersLocked) { return; }\r\n    // Re-order list to reflect drag.\r\n    let playersStateCopy = [...props.rankingsState];\r\n    let removed = playersStateCopy.splice( result.source.index, 1)[0];\r\n    playersStateCopy.splice(result.destination.index, 0, removed);\r\n    props.setRankingsState(playersStateCopy);\r\n  }\r\n\r\n  const getItemStyle = (isDragging, draggableStyle, playerInfo, index) => ({\r\n    padding: 19,\r\n    margin: `0 0 10px 0`,\r\n    background: isDragging ? \"var(--light)\" : PLAYER_COLORS[playerInfo[1]],\r\n    filter: answersLocked ? \"grayscale(100%) brightness(0.6)\" : (index < 3 ? \"\" : \"grayscale(75%)\"),\r\n    ...draggableStyle\r\n  })\r\n\r\n  // Function for locking user's votes.\r\n  const lockAnswers = () => {\r\n    let lockButton = document.getElementById(\"lockButton\");\r\n    setLockAnswersModalOpenStatus(false);\r\n    setAnswerLockStatus(true);\r\n    lockButton.innerHTML = \"LOCKED\";\r\n    lockButton.classList.remove(\"darkClickButton\");\r\n    lockButton.classList.add(\"disabled\");\r\n  }\r\n\r\n  // Render JSX\r\n  return (\r\n      <div className=\"gameScreen\">\r\n        \r\n        {/* Redirect when timer has finished. */}\r\n        {redirect ? <Redirect to={\"/results/\" + props.gameCode}/> : null}\r\n\r\n        <div className=\"gameScreenLeft\">\r\n          <div className=\"gameScreenJoinMsg\">\r\n            <h3 className=\"gameJoinGameText\">Join the fun!</h3>\r\n            <p className=\"gameGameCodeText\">{props.gameCode}</p>\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"gameScreenQuestion\">\r\n            <p className=\"gameScreenFormat\">FORMAT: {props.questionList[props.roundsPassed][0].toUpperCase()}</p>\r\n            <p className=\"gameScreenQuestionText\">{props.questionList[props.roundsPassed][1]}</p>\r\n            <Button className=\"huge darkClickButton\" onClick={timeIsUp}>Click to simulate time up</Button>\r\n          </div>\r\n          <div className=\"ui divider\"></div>\r\n\r\n        </div>\r\n\r\n        <div className=\"gameScreenRight\">\r\n          <p className=\"rankYourFriends\">Rank your friends!</p>\r\n          <div className=\"gameScreenDragContainer\">\r\n            <div className=\"gameScreenTop3Text\">\r\n              <p style={{marginBottom: \"25%\"}}>1st</p>\r\n              <p style={{marginBottom: \"25%\"}}>2nd</p>\r\n              <p>3rd</p>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"voteScreenDroppable\">\r\n                {(provided, snapshot) => (\r\n                  <div className=\"draggableBoxBackground\"\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  >\r\n                    {props.rankingsState.map((playerInfo, index) => (\r\n                      playerInfo[2] === true ? \r\n                      <Draggable key={index} draggableId={props.rankingsState.indexOf(playerInfo).toString()} index={index}>\r\n                        {(provided, snapshot) => (\r\n                          <div className=\"draggableItem\"\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            style={getItemStyle(\r\n                              snapshot.isDragging,\r\n                              provided.draggableProps.style,\r\n                              playerInfo,\r\n                              index,\r\n                            )}\r\n                          >\r\n                            {playerInfo[0]}\r\n                          </div>\r\n                        )}\r\n                      </Draggable> : null\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </div>\r\n                )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n          </div>\r\n          \r\n          <div className=\"gameScreenBottomButton\">\r\n            <div className=\"gameScreenDivider ui divider\"></div>\r\n            <Modal\r\n          basic\r\n          onClose={() => setLockAnswersModalOpenStatus(false)}\r\n          onOpen={() => setLockAnswersModalOpenStatus(true)}\r\n          open={lockAnswersModalOpenStatus}\r\n          size='small'\r\n          trigger={<button id=\"lockButton\" className=\"ui button massive darkClickButton\"><Icon name=\"lock\" />LOCK IN</button>}>\r\n          <Header icon><Icon className='large lock' />\r\n              Lock Answers\r\n              <br></br>\r\n              <br></br>\r\n              Are you sure you want to lock in your answers?\r\n          </Header>\r\n          <Modal.Actions className=\"joinScreenModalButtonContainer\">\r\n            <Button color=\"teal\" onClick={lockAnswers}><Icon name='check'/>Yes</Button>\r\n            <Button inverted color='red' onClick={() => setLockAnswersModalOpenStatus(false)}><Icon name='close' />No</Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n            <div className=\"gameScreenDivider ui divider\"></div>\r\n          </div>\r\n        </div>\r\n          \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default GameScreen;","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\ResultsScreen.js",["55","56","57","58"],"// Helper file that shows both user's individual results and the scores of each group member.\r\n\r\n// Our Stylings\r\nimport '../styles/styles.css';\r\n// Components\r\nimport IndividualResults from \"../utility-components/IndividualResults.js\";\r\nimport GroupResults from \"../utility-components/GroupResults.js\";\r\n// React Stuff\r\nimport React, { useState } from 'react';\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\n\r\nfunction ResultsScreen (props) {\r\n\r\n  const resultsMap = {\r\n    \"Individual\": IndividualResults,\r\n    \"Group\": GroupResults,\r\n  }\r\n  const [currentScreen, setCurrentScreen] = useState(\"Individual\");\r\n\r\n  // Render the proper screen.\r\n  const renderScreen = () => {\r\n    let TabElement = resultsMap[currentScreen];\r\n    return (<TabElement props={props} currentScreen={currentScreen} setCurrentScreen={setCurrentScreen} />)\r\n  }\r\n\r\n  return (\r\n    <div className=\"resultsScreenContainer\">\r\n      {renderScreen()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsScreen;","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\styles\\PlayerColors.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\PlayerIcon.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\IndividualResults.js",["59","60","61","62","63","64","65"],"// Our Stylings\r\nimport '../styles/styles.css';\r\nimport { PLAYER_COLORS } from \"../styles/PlayerColors.js\";\r\n// Components\r\nimport PlayerIcon from \"../utility-components/PlayerIcon.js\";\r\n// React Stuff\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction IndividualResults (props) {\r\n\r\n    let numPlayersToDisplay = 3;\r\n\r\n    switch (props.props.questionList[props.props.roundsPassed][0]) {\r\n      case \"Top 3\":\r\n        numPlayersToDisplay = 3;\r\n        break;\r\n      case \"Top 1\":\r\n        numPlayersToDisplay = 1;\r\n        break; \r\n      case \"Rank\": \r\n        numPlayersToDisplay = 8;\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"individualResultsScreen\">\r\n\r\n        <div className=\"resultsScreenLeftI\">\r\n          <p className=\"resultsScreenBigText\">MATCHES</p>\r\n          {/* Display matches for each player that the user picked (number varies based on the question) */}\r\n          {props.props.rankingsState.map((playerInfo, index) => (\r\n              (index < numPlayersToDisplay) ?\r\n              <div>\r\n                <div className=\"resultsScreenTopChoice\" style={{backgroundColor: PLAYER_COLORS[playerInfo[1]]}}>\r\n                  <p className=\"topChoiceText\">{playerInfo[0]}</p>\r\n                </div>\r\n                <p className=\"resultsScreenSmallText\"><Icon name=\"user plus\" /> Matches would go here.</p>\r\n              </div>\r\n               : null\r\n            ))}\r\n          <br></br>\r\n          <br></br>\r\n          <p className=\"resultsScreenBigText\">TOTAL: +300</p>\r\n        </div>\r\n\r\n        <div className=\"resultsScreenMiddleI\">\r\n          <div className=\"resultsScreenVerticalDivider\"></div>\r\n          <Button className=\"huge darkClickButton\" onClick={() => props.setCurrentScreen(\"Group\")}>\r\n            View Group Results<Icon name=\"arrow right\"></Icon>\r\n          </Button>\r\n          <div className=\"resultsScreenVerticalDivider\"></div>\r\n        </div>\r\n\r\n        <div className=\"resultsScreenRightI\">\r\n          <p className=\"resultsScreenBigText\">APPEARANCES</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 1st) 2x (+60)</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 2nd) 1x (+20)</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 3rd) 0x (+0)</p>\r\n          <p className=\"resultsScreenBigText\">TOTAL: +80</p>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n  \r\nexport default IndividualResults;","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\GroupResults.js",["66","67","68","69","70"],"// Our Stylings\r\nimport '../styles/styles.css';\r\nimport { PLAYER_COLORS } from \"../styles/PlayerColors.js\";\r\n// Components\r\nimport PlayerIcon from \"../utility-components/PlayerIcon.js\";\r\n// React Stuff\r\nimport React, { useState, useEffect } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from \"../../node_modules/react-beautiful-dnd\"\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction GroupResults (props) {\r\n\r\n  const [displayScore, setDisplayScore] = useState(-1);\r\n  const [returnHomeModalOpenState, setReturnHomeModalOpenState] = useState(false);\r\n\r\n  const calculatePlacingText = (place) => {\r\n    switch (place) {\r\n      case 1:\r\n        return \"1st\";\r\n      case 2:\r\n        return \"2nd\";\r\n      case 3:\r\n        return \"3rd\";\r\n      default:\r\n        return place + \"th\";\r\n    }\r\n  }\r\n\r\n  const mouseOverPlayerIcon = (index) => {\r\n    setDisplayScore(index);\r\n    console.log(index);\r\n    console.log(document);\r\n    document.getElementById(\"playerIcon\" + index).style.filter = \"drop-shadow(0px 0px 7px var(--light))\";\r\n  }\r\n\r\n  const mouseOutPlayerIcon = (index) => {\r\n    setDisplayScore(-1);\r\n    document.getElementById(\"playerIcon\" + index).style.filter = \"none\";\r\n\r\n  }\r\n\r\n    return (\r\n        <div className=\"groupResultsScreen\">\r\n          <div className=\"groupResultsScreenTop\">\r\n            <p className=\"howDidYouStackUp\">HOW DID YOU STACK UP?</p>\r\n          </div>\r\n          <div className=\"groupResultsScreenMiddle\">\r\n            {props.props.rankingsState.map((playerInfo, index) => (\r\n              (playerInfo[2] === true) ? \r\n              <div className=\"playerInfoContainer\" onMouseOver={() => mouseOverPlayerIcon(index)} onMouseOut={() => mouseOutPlayerIcon(index)}>\r\n                <p className=\"playerRankOrScore\">\r\n                  {displayScore === index ? \"_____ pts\" : calculatePlacingText(index + 1)}\r\n                </p>\r\n                <div id={\"playerIcon\" + index}>\r\n                  <PlayerIcon lobby={false} key={index} index={index} playerName={playerInfo[0]}/> \r\n                </div>\r\n              </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n          <div className=\"groupResultsScreenBottom\">\r\n\r\n          <Modal\r\n              basic\r\n              onClose={() => setReturnHomeModalOpenState(false)}\r\n              onOpen={() => setReturnHomeModalOpenState(true)}\r\n              open={returnHomeModalOpenState}\r\n              size='small'\r\n              trigger={<div><button className=\"ui icon button massive darkClickButton\" ><Icon name='hand peace' /></button></div>}>\r\n              <Header icon><Icon className='large exclamation triangle' />\r\n                <br></br>\r\n                Are you sure you want to leave this game?\r\n              </Header>\r\n              <Modal.Actions className=\"joinScreenModalButtonContainer\">\r\n                <Link to={{ pathname: \"/\" }}>\r\n                  <Button color=\"teal\" onClick={() => setReturnHomeModalOpenState(false)}>Yes</Button>\r\n                </Link>\r\n                <Button inverted color='red' onClick={() => setReturnHomeModalOpenState(false)}>No</Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Link to={{ pathname: \"/game/\" + props.props.gameCode }}>\r\n              <Button className=\"massive darkClickButton\" onClick={() => props.props.setRoundsPassed(props.props.roundsPassed + 1)}>\r\n                Next Round<Icon name=\"arrow right\"></Icon>\r\n              </Button>\r\n            </Link>\r\n\r\n          </div>\r\n          \r\n        </div>\r\n     );\r\n   }\r\n\r\nexport default GroupResults;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":16,"nodeType":"77","messageId":"78","endLine":8,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":7,"column":27,"nodeType":"77","messageId":"78","endLine":7,"endColumn":36},{"ruleId":"75","severity":1,"message":"80","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"81","line":10,"column":17,"nodeType":"77","messageId":"78","endLine":10,"endColumn":21},{"ruleId":"75","severity":1,"message":"82","line":10,"column":23,"nodeType":"77","messageId":"78","endLine":10,"endColumn":29},{"ruleId":"75","severity":1,"message":"83","line":10,"column":31,"nodeType":"77","messageId":"78","endLine":10,"endColumn":37},{"ruleId":"75","severity":1,"message":"84","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":18},{"ruleId":"75","severity":1,"message":"85","line":7,"column":17,"nodeType":"77","messageId":"78","endLine":7,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":7,"column":27,"nodeType":"77","messageId":"78","endLine":7,"endColumn":36},{"ruleId":"75","severity":1,"message":"80","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":15},{"ruleId":"75","severity":1,"message":"82","line":8,"column":23,"nodeType":"77","messageId":"78","endLine":8,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":15,"column":5,"nodeType":"88","messageId":"89","endLine":25,"endColumn":6},{"ruleId":"75","severity":1,"message":"90","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":23},{"ruleId":"75","severity":1,"message":"79","line":7,"column":27,"nodeType":"77","messageId":"78","endLine":7,"endColumn":36},{"ruleId":"75","severity":1,"message":"91","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":25},{"ruleId":"75","severity":1,"message":"92","line":8,"column":27,"nodeType":"77","messageId":"78","endLine":8,"endColumn":36},{"ruleId":"75","severity":1,"message":"93","line":8,"column":38,"nodeType":"77","messageId":"78","endLine":8,"endColumn":47},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Modal' is defined but never used.","'Icon' is defined but never used.","'Header' is defined but never used.","'Button' is defined but never used.","'PlayerIcon' is defined but never used.","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'PLAYER_COLORS' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","no-global-assign","no-unsafe-negation"]