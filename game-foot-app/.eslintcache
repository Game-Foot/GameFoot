[{"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\index.js":"1","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\reportWebVitals.js":"2","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\App.js":"3","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\LobbyScreen.js":"4","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\JoinScreen.js":"5","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\GameScreen.js":"6","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\ResultsScreen.js":"7","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\styles\\PlayerColors.js":"8","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\PlayerIcon.js":"9","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\IndividualResults.js":"10","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\GroupResults.js":"11"},{"size":507,"mtime":1609034675236,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3817,"mtime":1610922364120,"results":"15","hashOfConfig":"13"},{"size":5512,"mtime":1610919035663,"results":"16","hashOfConfig":"13"},{"size":5230,"mtime":1610915684966,"results":"17","hashOfConfig":"13"},{"size":6001,"mtime":1611002100542,"results":"18","hashOfConfig":"13"},{"size":996,"mtime":1610917890622,"results":"19","hashOfConfig":"13"},{"size":267,"mtime":1610653806357,"results":"20","hashOfConfig":"13"},{"size":1748,"mtime":1610229011417,"results":"21","hashOfConfig":"13"},{"size":2550,"mtime":1610921287919,"results":"22","hashOfConfig":"13"},{"size":3641,"mtime":1611002635455,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13vr4rc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\index.js",[],["50","51"],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\reportWebVitals.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\App.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\LobbyScreen.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\JoinScreen.js",["52"],"// Splash screen that users will see upon loading the game page.\r\n\r\n// Stylings\r\nimport '../styles/styles.css';\r\n// React stuff\r\nimport React, { useState } from 'react';\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n// Images\r\nimport stackItUpLogo from '../img/SIU Logo 1.png';\r\n\r\nfunction JoinScreen (props) {\r\n\r\n  const [joinModalOpenStatus, setJoinModalOpenStatus] = useState(false);\r\n  const [hostModalOpenStatus, setHostModalOpenStatus] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [userProfilePic, setUserProfilePic] = useState(\"\");\r\n\r\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n  const defaultProfilePic = \"https://i0.wp.com/www.repol.copl.ulaval.ca/wp-content/uploads/2019/01/default-user-icon.jpg?fit=300%2C300\";\r\n\r\n  const generateGameCode = () => {\r\n    let code = \"\";\r\n    for (let i = 0; i < 4; i++) {\r\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    props.setGameCode(code);\r\n  }\r\n\r\n  const saveUserProfile = () => {\r\n    // Push the user's profile changes to the server.\r\n  }\r\n\r\n  return (\r\n    <div className=\"joinScreen\">\r\n      <div className=\"joinScreenTopThird\"></div>\r\n\r\n      <div className=\"joinScreenmiddleThird\">\r\n        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n        <Modal\r\n          basic\r\n          onClose={() => setJoinModalOpenStatus(false)}\r\n          onOpen={() => setJoinModalOpenStatus(true)}\r\n          open={joinModalOpenStatus}\r\n          size='small'\r\n          trigger={<button className=\"ui button massive darkClickButton\" style={{marginBottom: \"25%\"}}>Join Game</button>}>\r\n          <Header icon><Icon className='large user plus' />\r\n              Join Game\r\n              <br></br>\r\n              <br></br>\r\n              <div className=\"ui input\">\r\n                <input onKeyUp={(e) => props.setGameCode(e.target.value)} maxlength=\"4\" type=\"text\" placeholder=\"Enter room code...\" style={{backgroundColor: \"var(--light)\"}}/>\r\n              </div>\r\n          </Header>\r\n          <Modal.Actions className=\"joinScreenModalButtonContainer\">\r\n            <Link to={{ pathname: \"/lobby/\" + props.gameCode }}>\r\n              <Button color=\"teal\" onClick={() => setJoinModalOpenStatus(false)}><Icon name='user plus'/>Join!</Button>\r\n            </Link>\r\n            <Button inverted color='red' onClick={() => setJoinModalOpenStatus(false)}><Icon name='remove' />Close</Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        <Modal\r\n          basic\r\n          onClose={() => setHostModalOpenStatus(false)}\r\n          onOpen={() => setHostModalOpenStatus(true)}\r\n          open={hostModalOpenStatus}\r\n          size='small'\r\n          trigger={<button className=\"ui button massive darkClickButton\" onClick={generateGameCode}>Host Game</button>}>\r\n          <Header icon><Icon className='large users' />\r\n              Host Game\r\n              <br></br>\r\n              <h1>Room Code: {props.gameCode}</h1>\r\n          </Header>\r\n          <Modal.Actions className=\"joinScreenModalButtonContainer\">\r\n            <Link to={{ pathname: \"/lobby/\" + props.gameCode }}>\r\n              <Button color=\"teal\" onClick={() => setHostModalOpenStatus(false)}><Icon name='users'/>Host!</Button>\r\n            </Link>\r\n            <Button inverted color='red' onClick={() => setHostModalOpenStatus(false)}>Close</Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        </div>\r\n\r\n        <div className=\"stackItUpLogoContainer\">\r\n          <img className=\"stackItUpLogo\" src={stackItUpLogo} alt=\"r\"></img>\r\n        </div>\r\n\r\n        <div className=\"joinScreenUserOptionsContainer\">\r\n          <Icon className=\"settingsIcon massive\" name='settings' />\r\n          <br></br><br></br><br></br>\r\n          <p className=\"joinScreenBigText\">Set Username</p>\r\n          <div className=\"ui input\">\r\n            <input type=\"text\" maxLength=\"10\" placeholder=\"Enter username...\" onKeyUp={(e) => setUsername(e.target.value)} style={{backgroundColor: \"var(--light)\"}}/>\r\n          </div>\r\n          <p className=\"joinScreenBigText\" style={{height: \"4vh\"}}>{username}</p>\r\n          <br></br><br></br>\r\n          <p className=\"joinScreenBigText\">Upload Profile Picture</p>\r\n          <div className=\"ui input\">\r\n            <input type=\"text\" placeholder=\"Paste URL here\" onKeyUp={(e) => setUserProfilePic(e.target.value)} style={{backgroundColor: \"var(--light)\"}}/>\r\n          </div>\r\n          <img className=\"joinScreenPic\" src={userProfilePic === \"\" ? defaultProfilePic : userProfilePic} alt=\"r\"></img>\r\n          <br></br>\r\n          <button className=\"ui button massive darkClickButton\" onClick={saveUserProfile}>Save</button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"joinScreenBottomThird\">\r\n        <p>gamefootbusiness@gmail.com</p>   \r\n        <div className=\"twitter\">\r\n          <img className=\"twitterPic\" src=\"https://cdn3.iconfinder.com/data/icons/capsocial-round/500/twitter-128.png\" alt=\"r\"></img>\r\n          <p>&nbsp; @GameFootInc1</p>\r\n        </div>\r\n        <p className=\"flag\">*For legal reasons this is not the Pan-African flag</p>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinScreen;\r\n","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\GameScreen.js",["53"],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\screens\\ResultsScreen.js",["54","55","56","57"],"// Helper file that shows both user's individual results and the scores of each group member.\r\n\r\n// Our Stylings\r\nimport '../styles/styles.css';\r\n// Components\r\nimport IndividualResults from \"../utility-components/IndividualResults.js\";\r\nimport GroupResults from \"../utility-components/GroupResults.js\";\r\n// React Stuff\r\nimport React, { useState } from 'react';\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\n\r\nfunction ResultsScreen (props) {\r\n\r\n  const resultsMap = {\r\n    \"Individual\": IndividualResults,\r\n    \"Group\": GroupResults,\r\n  }\r\n  const [currentScreen, setCurrentScreen] = useState(\"Individual\");\r\n\r\n  // Render the proper screen.\r\n  const renderScreen = () => {\r\n    let TabElement = resultsMap[currentScreen];\r\n    return (<TabElement props={props} currentScreen={currentScreen} setCurrentScreen={setCurrentScreen} />)\r\n  }\r\n\r\n  return (\r\n    <div className=\"resultsScreenContainer\">\r\n      {renderScreen()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsScreen;","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\styles\\PlayerColors.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\PlayerIcon.js",[],"F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\IndividualResults.js",["58","59","60","61","62","63","64"],"// Our Stylings\r\nimport '../styles/styles.css';\r\nimport { PLAYER_COLORS } from \"../styles/PlayerColors.js\";\r\n// Components\r\nimport PlayerIcon from \"../utility-components/PlayerIcon.js\";\r\n// React Stuff\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Icon, Header, Button } from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction IndividualResults (props) {\r\n\r\n    let numPlayersToDisplay = 3;\r\n\r\n    switch (props.props.questionList[props.props.roundsPassed][0]) {\r\n      case \"Top 3\":\r\n        numPlayersToDisplay = 3;\r\n        break;\r\n      case \"Top 1\":\r\n        numPlayersToDisplay = 1;\r\n        break; \r\n      case \"Rank\": \r\n        numPlayersToDisplay = 8;\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"individualResultsScreen\">\r\n\r\n        <div className=\"resultsScreenLeftI\">\r\n          <p className=\"resultsScreenBigText\">MATCHES</p>\r\n          {/* Display matches for each player that the user picked (number varies based on the question) */}\r\n          {props.props.rankingsState.map((playerInfo, index) => (\r\n              (index < numPlayersToDisplay) ?\r\n              <div>\r\n                <div className=\"resultsScreenTopChoice\" style={{backgroundColor: PLAYER_COLORS[playerInfo[1]]}}>\r\n                  <p className=\"topChoiceText\">{playerInfo[0]}</p>\r\n                </div>\r\n                <p className=\"resultsScreenSmallText\"><Icon name=\"user plus\" /> Matches would go here.</p>\r\n              </div>\r\n               : null\r\n            ))}\r\n          <br></br>\r\n          <br></br>\r\n          <p className=\"resultsScreenBigText\">TOTAL: +300</p>\r\n        </div>\r\n\r\n        <div className=\"resultsScreenMiddleI\">\r\n          <div className=\"resultsScreenVerticalDivider\"></div>\r\n          <Button className=\"huge darkClickButton\" onClick={() => props.setCurrentScreen(\"Group\")}>\r\n            View Group Results<Icon name=\"arrow right\"></Icon>\r\n          </Button>\r\n          <div className=\"resultsScreenVerticalDivider\"></div>\r\n        </div>\r\n\r\n        <div className=\"resultsScreenRightI\">\r\n          <p className=\"resultsScreenBigText\">APPEARANCES</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 1st) 2x (+60)</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 2nd) 1x (+20)</p>\r\n          <p className=\"resultsScreenSmallText\"><Icon name=\"star\" /> 3rd) 0x (+0)</p>\r\n          <p className=\"resultsScreenBigText\">TOTAL: +80</p>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n  \r\nexport default IndividualResults;","F:\\Personal Projects\\GameFoot\\game-foot-app\\src\\utility-components\\GroupResults.js",["65","66","67","68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":16,"nodeType":"76","messageId":"77","endLine":8,"endColumn":24},{"ruleId":"74","severity":1,"message":"78","line":7,"column":27,"nodeType":"76","messageId":"77","endLine":7,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":15},{"ruleId":"74","severity":1,"message":"80","line":10,"column":17,"nodeType":"76","messageId":"77","endLine":10,"endColumn":21},{"ruleId":"74","severity":1,"message":"81","line":10,"column":23,"nodeType":"76","messageId":"77","endLine":10,"endColumn":29},{"ruleId":"74","severity":1,"message":"82","line":10,"column":31,"nodeType":"76","messageId":"77","endLine":10,"endColumn":37},{"ruleId":"74","severity":1,"message":"83","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":18},{"ruleId":"74","severity":1,"message":"84","line":7,"column":17,"nodeType":"76","messageId":"77","endLine":7,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":7,"column":27,"nodeType":"76","messageId":"77","endLine":7,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":8,"column":23,"nodeType":"76","messageId":"77","endLine":8,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":15,"column":5,"nodeType":"87","messageId":"88","endLine":25,"endColumn":6},{"ruleId":"74","severity":1,"message":"89","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":7,"column":27,"nodeType":"76","messageId":"77","endLine":7,"endColumn":36},{"ruleId":"74","severity":1,"message":"90","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":25},{"ruleId":"74","severity":1,"message":"91","line":8,"column":27,"nodeType":"76","messageId":"77","endLine":8,"endColumn":36},{"ruleId":"74","severity":1,"message":"92","line":8,"column":38,"nodeType":"76","messageId":"77","endLine":8,"endColumn":47},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Modal' is defined but never used.","'Icon' is defined but never used.","'Header' is defined but never used.","'Button' is defined but never used.","'PlayerIcon' is defined but never used.","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'PLAYER_COLORS' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","no-global-assign","no-unsafe-negation"]